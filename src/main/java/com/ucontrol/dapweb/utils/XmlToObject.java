package com.ucontrol.dapweb.utils;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONObject;import com.ucontrol.dapweb.entity.appmodels.*;import java.io.File;import java.util.ArrayList;import java.util.Iterator;public class XmlToObject {    public static Model xmlToDevA(File file){        int id=1;        Model model = new Model("deva");        JSONObject json = XmlToJson.loadFromXml(file);        Iterator<Object> uIte =  json.getJSONArray("unit").listIterator();        //unit列表        ArrayList<Unit> units = new ArrayList<>();        //循环加载机组unit        while (uIte.hasNext()){            JSONObject unitJson = (JSONObject) uIte.next();            int unitIndex = unitJson.getInteger("index");            String unitName = unitJson.getString("name");            Iterator<Object> sIte = unitJson.getJSONArray("system").listIterator();            //system列表            ArrayList<PlantSystem> plantSystems = new ArrayList<>();            //循环加载系统system            while (sIte.hasNext()){                JSONObject sysJson = (JSONObject) sIte.next();                int sysIndex = sysJson.getInteger("index");                String sysName = sysJson.getString("name");                Iterator<Object> dIte = sysJson.getJSONArray("device").listIterator();                //device列表                ArrayList<Device> devices = new ArrayList<>();                //循环加载设备device                while (dIte.hasNext()){                    JSONObject devJson = (JSONObject) dIte.next();                    int devIndex = devJson.getInteger("index");                    String devName = devJson.getString("name");                    Iterator<Object> diIte = devJson.getJSONArray("item").listIterator();                    //点列表                    ArrayList<Item> devItems = new ArrayList<>();                    //循环加载设备下的点                    while (diIte.hasNext()){                        JSONObject diJson = (JSONObject) diIte.next();                        int dpt_Id;                        dpt_Id = diJson.getInteger("pt_id");                        Item devItem = new Item(dpt_Id);                        devItems.add(devItem);                    }                    Device device = new Device(devIndex, devName);                    //add itemlist                    device.setItemList(devItems);                    devices.add(device);                }                Iterator<Object> siIte = sysJson.getJSONArray("item").listIterator();                //点列表                ArrayList<Item> sysItems = new ArrayList<>();                //循环加载系统下的点                while (siIte.hasNext()){                    JSONObject siJson = (JSONObject) siIte.next();                    int spt_Id = siJson.getInteger("pt_id");                    Item sysItem = new Item(spt_Id);                    sysItems.add(sysItem);                }                PlantSystem plantSystem = new PlantSystem(sysIndex, sysName);                //add devicelist itemlist                plantSystem.setDeviceList(devices);                plantSystem.setItemList(sysItems);                plantSystems.add(plantSystem);            }            Unit unit = new Unit(unitIndex, unitName);            //add systemlist            unit.setSystemList(plantSystems);            units.add(unit);        }        model.setUnitList(units);        return model;    }}